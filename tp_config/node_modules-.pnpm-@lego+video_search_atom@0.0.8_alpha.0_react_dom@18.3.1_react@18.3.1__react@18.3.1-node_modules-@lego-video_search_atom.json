{
  "name": "@lego/video_search_atom",
  "description": "头条搜索lynx原子类",
  "version": "0.0.8-alpha.0",
  "license": "ISC",
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "types": "types/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://code.byted.org/toutiao-fe/lynx_atom_monorepo.git",
    "directory": "packages/video_search_atom"
  },
  "homepage": "",
  "files": [
    "dist",
    "types"
  ],
  "engines": {
    "node": ">=12.13.0"
  },
  "dependencies": {
    "@babel/runtime": "^7.11.2",
    "@lego/base_atom": "^0.0.2",
    "@lego/theme_atom": "^0.0.2"
  },
  "devDependencies": {
    "@lego/lego_dark": "^0.3.15",
    "@lego/lego_reset": "^0.3.4",
    "@storybook/addon-actions": "^6.0.26",
    "@storybook/addon-docs": "^6.0.26",
    "@storybook/addon-essentials": "^6.0.26",
    "@storybook/addon-links": "^6.0.26",
    "@storybook/addon-postcss": "^2.0.0",
    "@storybook/addon-storyshots": "^6.1.14",
    "@storybook/react": "^6.0.26",
    "@testing-library/react": "^11.2.5",
    "color": "^4.0.1",
    "core-js": "^3.8.1",
    "css-loader": "5",
    "http-proxy-middleware": "^1.0.6",
    "less": "^3.13.1",
    "less-loader": "7",
    "lodash": "^4.17.21",
    "postcss": "^8.3.6",
    "postcss-cli": "^8.3.1",
    "postcss-dark-theme-class": "0.7.2",
    "postcss-loader": "4",
    "react": "16.9.0",
    "react-dom": "16.9.0",
    "react-is": "16.9.0",
    "shelljs": "^0.8.4",
    "storybook-dark-mode": "^1.0.8",
    "style-loader": "2",
    "tailwindcss": "^2.2.4"
  },
  "peerDependencies": {
    "react": "16.9.0",
    "react-dom": "16.9.0"
  },
  "author": {
    "name": "zhongcheng",
    "email": "zhongcheng@bytedance.com",
    "url": "lark://applink.feishu.cn/client/chat/open?openId=ou_a43a1e31a0dc8fa397e53f44f42ba13e"
  },
  "scripts": {
    "doc:dev": "start-storybook -p 6010 --no-manager-cache",
    "doc:build": "build-storybook -o docs",
    "release": "tiger release",
    "release:big": "tiger release --versionType major",
    "release:feat": "tiger release --versionType feat",
    "release:fix": "tiger release --versionType fix",
    "release:alpha": "tiger release --versionType alpha",
    "test": "tiger test",
    "test:watch": "tiger test -w",
    "test:update": "tiger test -u",
    "new": "tiger create -n",
    "doc:deploy": "tiger doc --publish",
    "build:css": "rm -rf ./dist/index.less && postcss ./src/index.less -o ./dist/index.css",
    "mydoc": "node src/doc/utils/create.js"
  },
  "readme": "# monorepo-子项目-组件库\n\n> 文档站地址：「」\n\n## Get Started\n\n### 新建组件\n\n```\nyarn new component-name\n```\n\n> 举例： `yarn new status-bar`\n\n## 调试\n\n### 使用 文档调试模式\n\n1. 启动\n\n```\nyarn doc:dev\n```\n\n2. 修改源码，热更新之后，查看页面中组件的最新表现\n\n### 与 Web 项目联调\n\n1. 在组件库中执行 `yarn link`\n2. 在 Web 项目中执行 `yarn link {YOUR_PACKAGE_NAME}`\n\n## 代码格式规范和测试\n\n1. 使用 tiger 管理的项目在使用 VScode 的时候具备智能编码的能力（开发时提示错误，保存时自动修复格式问题）\n2. 在执行 `commit` 之前会执行 `lint-staged`\n3. 如果遇到快照前后出现 **预期之内的 DIFF** 时，执行 `yarn test -u` 更新快照\n4. [Advanced] 确认不需要进行测试，在 commit 的时候使用参数 `--no-verify` 跳过测试\n\n## 构建 + 发布\n\n### 发布 NPM 包\n\n`yarn release`\n\n#### 构建新版本\n\n> 版本号格式：主版本号.次版本号.修订号\n>\n> 如果版本还不稳定，可以发布测试版本：`yarn release:alpha`\n\n- 主版本号：当你做了不兼容的 API 修改 `yarn release:big`\n- 次版本号：当你做了向后兼容的功能性新增 `yarn release:feat`\n- 修订号：当你做了向后兼容的问题修正 `yarn release:fix`\n\n#### 发布 包 到 BNPM\n\n`yarn publish`\n\n### 发布文档站\n\n1. 构建静态产物：`yarn doc:build`\n2. [WIP]创建 SCM 配置，构建版本\n3. [WIP]配置 Goofy，发布静态站点\n"
}